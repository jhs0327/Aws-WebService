buildscript {
    ext {
        springBootVersion = '2.1.9.RELEASE'
    }
//  ext{}는 build.gradle에서 사용하는 전역변수를 설정하겠다는 의미
//  의미 : springBootVersion을 2.1.7 RELEASE로 하겠다.

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//자바와 스프링 부트를 사용하기 위한 필수적인 플러그

group 'com.jojoldu.book'
version '1.0.4-SNAPSHOT-'+new Date().format("yyyyMMddHHmmss")
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}
//reposiotres는 각종 의존성들을 어떤 원격 저장소에 받을지를 지정한다.
//기본적으로 mavenCentral()을 자주 사용하나, 최근에는 jcenter()를 많이 사용한다.
//이유는 mavenCentral()는 라이브러리 업로드를 위해서  많은 설정이 필요한 반면, jcenter()라이브러리를 업르를 간단하게 할 수 있기 때문이다.
//또한, jcenter() 라이브러리를 업로드하면 mavenCentral에도 업로드가 가능하다.

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.projectlombok:lombok')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-mustache')
    compile('com.h2database:h2')

    compile('org.springframework.boot:spring-boot-starter-oauth2-client')
    compile('org.springframework.session:spring-session-jdbc')

    compile("org.mariadb.jdbc:mariadb-java-client")

    testCompile('org.springframework.boot:spring-boot-starter-test')
    //testCompile("org.springframework.security:spring-security-test")

    annotationProcessor('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')
}
